generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/.prisma/client"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String                @id @default(uuid())
  username     String                @unique
  passwordHash String
  createdAt    DateTime              @default(now())
  avatarUrl    String?
  displayName  String?
  email        String?               @unique
  language     String                @default("chinese")
  updatedAt    DateTime              @updatedAt
  assets       Asset[]
  collections  UserCollectionAsset[]
  likes        UserLikeAsset[]

  @@index([email])
  @@index([username])
}

model Asset {
  id          String                @id @default(uuid())
  ownerId     String
  title       String
  prompt      String?
  mediaType   Int
  fileUri     String
  createdAt   DateTime              @default(now())
  isPublic    Boolean               @default(true)
  metadata    Json?
  updatedAt   DateTime              @updatedAt
  collected   Int                   @default(0)
  copied      Int                   @default(0)
  downloaded  Int                   @default(0)
  liked       Int                   @default(0)
  owner       User                  @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  collectedBy UserCollectionAsset[]
  likedBy     UserLikeAsset[]

  @@index([ownerId, createdAt])
  @@index([mediaType, createdAt])
  @@index([isPublic, createdAt])
}

model UserLikeAsset {
  id      String @id @default(uuid())
  userId  String
  assetId String
  asset   Asset  @relation(fields: [assetId], references: [id])
  user    User   @relation(fields: [userId], references: [id])

  @@unique([userId, assetId])
}

model UserCollectionAsset {
  id      String @id @default(uuid())
  userId  String
  assetId String
  asset   Asset  @relation(fields: [assetId], references: [id])
  user    User   @relation(fields: [userId], references: [id])

  @@unique([userId, assetId])
}
